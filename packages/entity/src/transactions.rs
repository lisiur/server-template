//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "transactions")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub account_book_id: Uuid,
    pub category_id: Option<Uuid>,
    pub transfer_type: String,
    pub transfer_from: Option<Uuid>,
    pub transfer_to: Option<Uuid>,
    pub amount: i32,
    pub remarks: String,
    pub count_as_income: bool,
    pub count_as_expenditure: bool,
    pub created_by: Uuid,
    pub updated_by: Uuid,
    pub is_deleted: bool,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::account_books::Entity",
        from = "Column::AccountBookId",
        to = "super::account_books::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AccountBooks3,
    #[sea_orm(
        belongs_to = "super::account_books::Entity",
        from = "Column::TransferFrom",
        to = "super::account_books::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AccountBooks2,
    #[sea_orm(
        belongs_to = "super::account_books::Entity",
        from = "Column::TransferTo",
        to = "super::account_books::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AccountBooks1,
    #[sea_orm(
        belongs_to = "super::categories::Entity",
        from = "Column::CategoryId",
        to = "super::categories::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Categories,
    #[sea_orm(has_many = "super::relation_transactions_tags::Entity")]
    RelationTransactionsTags,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::CreatedBy",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users2,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::UpdatedBy",
        to = "super::users::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Users1,
}

impl Related<super::categories::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Categories.def()
    }
}

impl Related<super::relation_transactions_tags::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RelationTransactionsTags.def()
    }
}

impl Related<super::tags::Entity> for Entity {
    fn to() -> RelationDef {
        super::relation_transactions_tags::Relation::Tags.def()
    }
    fn via() -> Option<RelationDef> {
        Some(
            super::relation_transactions_tags::Relation::Transactions
                .def()
                .rev(),
        )
    }
}

impl ActiveModelBehavior for ActiveModel {}
