//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub account: String,
    pub nickname: Option<String>,
    pub real_name: Option<String>,
    pub phone: Option<String>,
    pub email: Option<String>,
    pub email_verified: bool,
    pub avatar_url: Option<String>,
    pub gender: Gender,
    pub birthday: Option<Date>,
    pub bio: Option<String>,
    pub password_digest: Option<String>,
    pub last_login: Option<String>,
    pub failed_login_attempts: i16,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

#[derive(EnumIter, DeriveActiveEnum, Clone, Debug, PartialEq, Eq)]
#[sea_orm(rs_type = "i16", db_type = "Integer")]
pub enum Gender {
    Unknown = 0,
    Male = 1,
    Female = 2,
}

impl Default for Gender {
    fn default() -> Self {
        Gender::Unknown
    }
}
